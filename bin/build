#!/usr/bin/env bash
# bin/build <document>
# Attempt to build a document into a PDF

DOCUMENT=$1
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
OPTIONS="--interaction=nonstopmode -file-line-error"

# Output helpers
source $BIN_DIR/utils

# Build the document
build-step "Building $DOCUMENT"
WRITTEN=`pdflatex $OPTIONS $DOCUMENT | grep "^Output written"`

# Bail out if something went wrong
if [ ! "$WRITTEN" ]; then
    TEX_LOG=`echo $DOCUMENT | sed 's/\.tex$/.log/'`

    # Save logs to a file to loop over them more reliably
    ERROR_LOG=`mktemp`

    # Read out just the error messages and locations
    grep "^\./$DOCUMENT:" $TEX_LOG | sed 's/^..//' > $ERROR_LOG

    while read -r line; do
        LINE_NO=`echo $line | cut -d: -f2`

        # Ignore multiple messages per line
        if [ "$LINE_NO" != "$PREV_LINE_NO" ]; then
            # Send feedback to the user
            build-warn "$line"
        fi
        PREV_LINE_NO="$LINE_NO"
    done < $ERROR_LOG

    # Clean up after ourselves
    rm $ERROR_LOG
    exit 1
fi

# Give some feedback to the user
OUTPUT_FILENAME=`echo $WRITTEN | sed 's/.*on \(.\+pdf\).*/\1/'`
PAGES=`echo $WRITTEN | sed 's/.* .\([0-9]\+ pages\?\),.*/\1/'`
build-info "Wrote $PAGES to $OUTPUT_FILENAME"
